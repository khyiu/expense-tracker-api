openapi: 3.0.3
info:
  title: Grocery Tracker API
  description: Definition of available methods to interact with the Grocery Tracker application back-end.
  version: 1.0.0-SNAPSHOT
servers:
  - url: 'http://grocery-tracker-back-8.eu-central-1.elasticbeanstalk.com/'
    description: Production environment
tags:
  - name: Purchase locations
    description: Operations related to purchase locations
  - name: Purchases
    description: Operations related to grocery purchases
paths:
  /purchases:
    get:
      operationId: getPurchases
      summary: Fetch registered purchases.
      description: Retrieve in a paginated way, purchases that have been registered in the system and that are associated to the current user.
      parameters:
        - in: query
          name: pageNumber
          schema:
            type: integer
          required: true
          description: Index of the result page to retrieve.
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
          description: Maximum number of result item per retrieved page.
      responses:
        200:
          description: Purchases associated to the current user have been retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchasesResponse'
    post:
      operationId: registerPurchase
      summary: Registers a purchase.
      description: Registers a purchase, along with information such as descriptions tags, sales unit and price.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
        required: true
      responses:
        201:
          description: Purchase has been properly registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
      tags:
        - Purchases
components:
  schemas:
    Packaging:
      type: object
      properties:
        nbUnitPerPackage:
          type: integer
          default: 1
        unitMeasurements:
          $ref: '#/components/schemas/UnitMeasurement'
    UnitMeasurement:
      type: object
      properties:
        type:
          type: string
          enum: [ pc, ml, cl, l, g, kg ]
          default: pc
        quantity:
          type: integer
          default: 1
    PurchaseLocation:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        locationTag:
          type: string
      required:
        - description
        - locationTag
    PurchaseRequest:
      description: Request object representing the purchase to be registered in the application
      type: object
      properties:
        date:
          type: string
          format: date
        location:
          $ref: '#/components/schemas/PurchaseLocation'
        brand:
          type: string
        descriptionTags:
          type: array
          items:
            type: string
          minItems: 1
        unitPrice:
          type: number
        packaging:
          $ref: '#/components/schemas/Packaging'
      required:
        - date
        - location
        - descriptionTags
        - unitPrice
        - packaging
    Purchase:
      description: Representation of a purchase that has been registered in the application
      allOf:
        - $ref: '#/components/schemas/PurchaseRequest'
        - type: object
          properties:
            id:
              type: string
              description: ID following UUID format
          required:
            - id
    PurchasesResponse:
      description: Page of purchases that have been registered in the application
      type: object
      properties:
        totalElements:
          description: total number of purchases associated to current user
          type: number
        totalPages:
          description: total number of pages based on the current page size
          type: number
        number:
          description: index of current page
          type: number
        content:
          type: array
          items:
            $ref: '#/components/schemas/Purchase'
      required:
        - totalElements
        - totalPages
        - number
        - content

